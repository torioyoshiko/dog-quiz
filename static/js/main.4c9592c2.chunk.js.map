{"version":3,"sources":["components/start.js","components/button.js","components/question.js","utils/random.js","components/gameOver.js","components/victory.js","App.js","index.js"],"names":["Start","className","to","type","Button","props","onClick","children","Question","questionNumber","alt","src","question","url","breeds","map","breed","onQuestionAnswered","key","getRandomIntInclusive","min","max","roundedMin","Math","ceil","roundedMax","floor","random","GameOver","correctImg","correctBreed","startOver","Victory","App","generateQuestion","a","randomBreeds","i","randomIndex","state","length","includes","push","indexCorrectBreed","fetch","response","json","correctBreedUrl","message","setState","prevState","history","bind","breedNames","Object","getOwnPropertyNames","this","exact","path","component","Component","withRouter","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.4c9592c2.chunk.js","sourcesContent":["import React from 'react';\nimport './css/start.css';\nimport { Link } from 'react-router-dom';\n\nfunction Start() {\n  return (\n    <div className=\"background\">\n      <h2>Who wants to be a dogellionaire?</h2>\n      <p className=\"doge-info\">\n        It’s a quiz which will test your knowledge of dog breeds.\n        You will be given an image of a dog and 4 answers.\n        Let’s see how good are you at knowing your good boys and girls\n      </p>\n      <Link to=\"/question\">\n        <button type=\"submit\">Start</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Start;\n","import React from 'react';\nimport './css/button.css';\n\nconst Button = (props) => (\n  <button\n    className=\"button\"\n    type=\"submit\"\n    onClick={props.onClick}\n  >\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport './css/question.css';\nimport Button from './button';\n\nconst Question = (props) => (\n  <div className=\"question-background\">\n    <div className=\"info-question\">\n      <p className=\"question-number\">\n        {props.questionNumber}\n        /16\n      </p>\n      <p>Which breed is this dog?</p>\n    </div>\n    <img className=\"breedImg\" alt=\"doge\" src={props.question.url} />\n    <div className=\"buttons\">\n      {props.question.breeds.map((breed) => (\n        <Button\n          onClick={() => props.onQuestionAnswered(breed)}\n          key={breed}\n        >\n          {breed}\n        </Button>\n      ))}\n    </div>\n  </div>\n);\n\nexport default Question;\n","function getRandomIntInclusive(min, max) {\n  const roundedMin = Math.ceil(min);\n  const roundedMax = Math.floor(max);\n  return Math.floor(Math.random() * (roundedMax - roundedMin + 1)) + roundedMin;\n}\n\nexport default getRandomIntInclusive;\n","import React from 'react';\nimport './css/gameOver.css';\nimport Button from './button';\n\nconst GameOver = (props) => (\n  <div className=\"background\">\n    <div className=\"info-question\">\n      <p className=\"game-over\">Game Over</p>\n      <img alt=\"correctBreed\" className=\"breedImg\" src={props.correctImg} />\n      <p className=\"breed-info\">\n          {`This dog is a ${props.correctBreed}`}\n      </p>\n      <Button onClick={props.startOver}>Play again</Button>\n    </div>\n  </div>\n);\n\nexport default GameOver;\n","import React from 'react';\nimport './css/victory.css';\nimport Button from './button';\n\nconst Victory = (props) => (\n  <div className=\"background\">\n    <div className=\"info-question\">\n      <p className=\"win\">You won!</p>\n      <p className=\"win-info\">You are a true dog connoisseur!</p>\n      <div className=\"buttons\">\n        <Button onClick={props.startOver}>Play again</Button>\n        <Button>Share</Button>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Victory;\n","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Route, Switch, withRouter,\n} from 'react-router-dom';\nimport Start from './components/start';\nimport Question from './components/question';\nimport getRandomIntInclusive from './utils/random';\nimport GameOver from './components/gameOver';\nimport Victory from './components/victory';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      breeds: [],\n      question: {\n        breeds: [],\n        url: '',\n        correctBreed: '',\n      },\n      questionNumber: 1,\n    };\n    this.generateQuestion = this.generateQuestion.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://dog.ceo/api/breeds/list/all');\n    const json = await response.json();\n    const breedNames = Object.getOwnPropertyNames(json.message);\n    this.setState({ breeds: breedNames });\n    await this.generateQuestion();\n  }\n\n    generateQuestion = async () => {\n      const randomBreeds = [];\n      for (let i = 0; i < 4; i++) {\n        let breed;\n        do {\n          const randomIndex = getRandomIntInclusive(0, this.state.breeds.length - 1);\n          breed = this.state.breeds[randomIndex];\n        } while (randomBreeds.includes(breed));\n        randomBreeds.push(breed);\n      }\n      const indexCorrectBreed = getRandomIntInclusive(0, randomBreeds.length - 1);\n      const correctBreed = randomBreeds[indexCorrectBreed];\n      const response = await fetch(`https://dog.ceo/api/breed/${correctBreed}/images/random`);\n      const json = await response.json();\n      const correctBreedUrl = json.message;\n      this.setState({\n        question: {\n          breeds: randomBreeds,\n          url: correctBreedUrl,\n          correctBreed,\n        },\n      });\n    }\n\n    onQuestionAnswered = (breed) => {\n      if (breed === this.state.question.correctBreed) {\n        this.setState((prevState) => ({ questionNumber: prevState.questionNumber + 1 }));\n        this.generateQuestion();\n        if (this.state.questionNumber === 16) {\n          this.props.history.push('/victory');\n        }\n      } else {\n        this.props.history.push('/gameover');\n        this.setState({ questionNumber: 1 });\n      }\n    }\n\n    startOver = async () => {\n      await this.generateQuestion();\n      this.props.history.push('/question');\n    }\n\n    render() {\n      return (\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Start} />\n            <Route path=\"/question\">\n              <Question\n                question={this.state.question}\n                onQuestionAnswered={this.onQuestionAnswered}\n                questionNumber={this.state.questionNumber}\n              />\n            </Route>\n            <Route path=\"/gameover\">\n              <GameOver\n                correctBreed={this.state.question.correctBreed}\n                correctImg={this.state.question.url}\n                startOver={this.startOver}\n              />\n            </Route>\n            <Route path=\"/victory\">\n              <Victory startOver={this.startOver} />\n            </Route>\n          </Switch>\n        </div>\n      );\n    }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}